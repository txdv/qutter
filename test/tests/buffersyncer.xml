<code>
<cinclude><![CDATA[#include<QVariantList>
#include <QVariant>
#include <iostream>
#include<QString>]]></cinclude>
<cwrite><![CDATA[
 // QVariant(QVariantList, [ InitRequest, QVariant(QString, "BufferSyncer"), QVariant(QString, (null)) ])
  QVariantList list;
  list.append(1);
  list.append("BufferSyncer");
  list.append("");
  out << QVariant(list);
]]></cwrite>
<cread><![CDATA[
  QVariant variant;
  in >> variant;
  assert(strcmp(variant.typeName(), "QVariantList") == 0);
  QVariantList list = variant.toList();
  assert(list.size() == 3);
  assert(list[0] == 1);
  QString bufferSyncer("BufferSyncer");
  assert(list[1] == bufferSyncer);
  QString emptyString;
  assert(list[2] == emptyString);
]]></cread>
<cswrite><![CDATA[
    List<QVariant> list = new List<QVariant>();
    list.Add(new QVariant(1));
    list.Add(new QVariant("BufferSyncer"));
    list.Add(new QVariant(typeof(string)));
    QTypeManager.Serialize(fs, new QVariant(list));
]]></cswrite>
<csread><![CDATA[
    QVariant var;
    QTypeManager.Deserialize(fs, out var);
    Debug.Assert(var.Value is List<QVariant>);
    List<QVariant> list = var.Value as List<QVariant>;
    Debug.Assert(list.Count == 3);
    Debug.Assert(list[0].GetValue<int>() == 1);
    Debug.Assert(list[1].GetValue<string>() == "BufferSyncer");
    Debug.Assert(list[2].Type == QMetaType.QString);
]]></csread>
</code>
