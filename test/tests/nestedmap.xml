<code>
<cinclude><![CDATA[#include <QMap>]]></cinclude>
<cwrite><![CDATA[
  QMap<int, QMap<int, int> > m = QMap<int, QMap<int, int> >();

  QMap<int, int> m1 = QMap<int,int>();
  m1[1] = 2;
  m1[3] = 5;

  QMap<int, int> m2 = QMap<int,int>();
  m2[5] = 19;
  m2[13] = 364;

  m[1] = m1;
  m[2] = m2;

  out << m;
]]></cwrite>
<cread><![CDATA[
  QMap<int, QMap<int, int> > m = QMap<int, QMap<int, int> >();
  in >> m;

  assert(m.size() == 2);

  assert(m[1].size() == 2);
  assert(m[1][1] == 2);
  assert(m[1][3] == 5);

  assert(m[2].size() == 2);
  assert(m[2][5] == 19);
  assert(m[2][13] == 364);
]]></cread>
<cswrite><![CDATA[
  Dictionary<int, Dictionary<int, int>> m = new Dictionary<int, Dictionary<int, int>>();

  Dictionary<int, int> m1 = new Dictionary<int, int>();
  m1[1] = 2;
  m1[3] = 5;

  Dictionary<int, int> m2 = new Dictionary<int, int>();
  m2[5] = 19;
  m2[13] = 364;

  m[1] = m1;
  m[2] = m2;

  QTypeManager.Serialize(fs, m);
]]></cswrite>
<csread><![CDATA[
  Dictionary<int, Dictionary<int, int>> m;
  QTypeManager.Deserialize(fs, out m);
  Debug.Assert(m.Count == 2);

  Debug.Assert(m[1].Count == 2);
  Debug.Assert(m[1][1] == 2);
  Debug.Assert(m[1][3] == 5);

  Debug.Assert(m[2].Count == 2);
  Debug.Assert(m[2][5] == 19);
  Debug.Assert(m[2][13] == 364);
]]></csread>
</code>
